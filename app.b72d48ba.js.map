{"version":3,"sources":["data/checkins.min.json","assets/app.js"],"names":["module","exports","type","features","properties","id","date","country","cc","geometry","coordinates","color","map","mapboxgl","Map","container","style","maxZoom","logoPosition","attributionControl","boxZoom","zoom","$infoCountries","document","getElementById","$infoPlaces","$infoCheckins","$countries","bodyClass","body","classList","startInteractive","add","endInteractive","remove","toggleInteractive","toggle","on","addEventListener","numberWithCommas","x","toString","replace","addControl","AttributionControl","compact","LayersControl","onAdd","createElement","className","linesButton","innerHTML","title","getLayoutProperty","setLayoutProperty","appendChild","renderNumber","el","number","frames","inc","Math","ceil","num","requestAnimationFrame","render","textContent","NavigationControl","data","require","_countries","_places","checkinsCount","length","lines","filter","f","i","isUnique","lng","lat","toLowerCase","bounds","LngLatBounds","places_count","checkins_count","extend","nextFeature","nextLng","nextLat","push","placesCount","Object","keys","countries","c","name","countriesCount","sort","a","b","once","forEach","$button","e","fitBounds","padding","layers","getStyle","reverse","labelLayerIdx","findIndex","layer","labelLayerId","undefined","console","log","setLayerZoomRange","addSource","cluster","clusterMaxZoom","clusterRadius","tolerance","buffer","addLayer","source","paint","maxzoom","layout","minzoom","getCanvas","cursor","originalEvent","stopPropagation","flyTo","center","lngLat","getZoom","visibility","err","confirm","location","reload","error","window","onerror"],"mappings":"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","file":"app.b72d48ba.js","sourceRoot":"..","sourcesContent":["module.exports={type:\"FeatureCollection\",features:[{type:\"Feature\",properties:{id:\"4f11ce82e4b07e9ecad0480c\",date:20211207,country:\"United States\",cc:\"US\"},geometry:{type:\"Point\",coordinates:[-95.391,29.745]}},{type:\"Feature\",properties:{id:\"4aca84e9f964a5203cc220e3\",date:20181231,country:\"United States\",cc:\"US\"},geometry:{type:\"Point\",coordinates:[-95.401,29.717]}}]};","const color = '#14B7F4';\n\nconst map = new mapboxgl.Map({\n  container: 'map',\n  style: 'mapbox://styles/cheeaun/ckbm8ln3w15d01ilp38k7xll8',\n  maxZoom: 16,\n  logoPosition: 'top-right',\n  attributionControl: false,\n  boxZoom: false,\n  zoom: 0.1,\n});\n\n// const $info = document.getElementById('info');\nconst $infoCountries = document.getElementById('info-countries');\nconst $infoPlaces = document.getElementById('info-places');\nconst $infoCheckins = document.getElementById('info-checkins');\nconst $countries = document.getElementById('countries');\n\nconst bodyClass = document.body.classList;\nfunction startInteractive() {\n  bodyClass.add('interactive');\n}\nmap.on('dragstart', startInteractive);\nmap.on('zoomstart', startInteractive);\n\nfunction endInteractive() {\n  bodyClass.remove('interactive');\n}\n$countries.addEventListener('touchstart', endInteractive, false);\n$countries.addEventListener('mouseenter', endInteractive);\n\nfunction toggleInteractive() {\n  bodyClass.toggle('interactive');\n}\nmap.on('click', toggleInteractive);\n\nconst numberWithCommas = (x) =>\n  x > 999 ? x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') : x;\n\nmap.addControl(new mapboxgl.AttributionControl({ compact: true }), 'top-right');\n\nclass LayersControl {\n  onAdd(map) {\n    const container = document.createElement('div');\n    container.className = 'mapboxgl-ctrl mapboxgl-ctrl-group';\n\n    const linesButton = document.createElement('button');\n    linesButton.innerHTML = `<svg width='20' height='20' viewBox='0 0 24 24'>\n      <path d='M23 8c0 1.1-.9 2-2 2-.18 0-.35-.02-.5-.07l-3.57 3.55c.05.16.07.34.07.52 0 1.1-.9 2-2 2s-2-.9-2-2c0-.18.02-.36.07-.52l-2.55-2.55c-.16.05-.34.07-.52.07s-.36-.02-.52-.07L4.93 15.5c.05.15.07.32.07.5 0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2c.18 0 .35.02.5.07l4.57-4.55C8.02 9.36 8 9.18 8 9c0-1.1.9-2 2-2s2 .9 2 2c0 .18-.02.36-.07.52l2.55 2.55c.16-.05.34-.07.52-.07s.36.02.52.07l3.55-3.56c-.05-.14-.07-.3-.07-.5 0-1.1.9-2 2-2s2 .9 2 2z'/>\n    </svg>`;\n    linesButton.type = 'button';\n    linesButton.title = 'Show/hide journey lines';\n    linesButton.addEventListener(\n      'click',\n      () => {\n        const visibility = map.getLayoutProperty('lines', 'visibility');\n        if (visibility === 'visible') {\n          map.setLayoutProperty('lines', 'visibility', 'none');\n          linesButton.classList.remove('active');\n        } else {\n          map.setLayoutProperty('lines', 'visibility', 'visible');\n          linesButton.classList.add('active');\n        }\n      },\n      false,\n    );\n\n    container.appendChild(linesButton);\n    return container;\n  }\n}\nmap.addControl(new LayersControl(), 'top-right');\n\nmap.addControl(new mapboxgl.NavigationControl(), 'top-right');\n\n// let slider;\n// class PitchControl {\n//   onAdd() {\n//     const container = document.createElement('div');\n//     container.className = 'mapboxgl-ctrl pitch-ctrl';\n\n//     container.innerHTML = `<svg viewBox='0 0 24 24'>\n//       <title>Pitch</title>\n//       <path d='M14 6l-3.8 5 3 3.8-1.7 1.2L7 10l-6 8h22L14 6z'/>\n//     </svg>`;\n\n//     slider = document.createElement('input');\n//     slider.type = 'range';\n//     slider.step = 5;\n//     slider.min = slider.value = 0;\n//     slider.max = 60;\n//     slider.className = 'pitch-slider';\n//     slider.addEventListener('change', (e) => {\n//       map.easeTo({ pitch: e.target.value });\n//     }, false);\n\n//     container.appendChild(slider);\n//     return container;\n//   }\n// }\n// map.addControl(new PitchControl(), 'top-right');\n// map.on('pitchend', () => {\n//   slider.value = map.getPitch();\n// });\n\nfunction renderNumber(el, number) {\n  const frames = 60;\n  const inc = Math.ceil(number / frames);\n  let num = 0;\n  function render() {\n    if (num >= number) return;\n    num = num + inc;\n    if (num > number) num = number;\n    el.textContent = numberWithCommas(num);\n    requestAnimationFrame(render);\n  }\n  requestAnimationFrame(render);\n}\n\nconst data = require('../data/checkins.min.json');\nconst _countries = {};\nconst _places = {};\n\nconst checkinsCount = data.features.length;\n\nconst lines = [];\n\ndata.features = data.features.filter((f, i) => {\n  const { id, country } = f.properties;\n  const isUnique = !_places[id];\n  const [lng, lat] = f.geometry.coordinates;\n  if (isUnique) {\n    if (!_countries[country]) {\n      const cc = f.properties.cc.toLowerCase();\n      _countries[country] = {\n        cc: cc,\n        bounds: new mapboxgl.LngLatBounds(),\n        places_count: 0,\n        checkins_count: 0,\n      };\n    }\n    _countries[country].bounds.extend([lng, lat]);\n    _countries[country].places_count++;\n    _places[id] = true;\n  }\n  _countries[country].checkins_count++;\n\n  const nextFeature = data.features[i + 1];\n  if (nextFeature && f.properties.date === nextFeature.properties.date) {\n    let [nextLng, nextLat] = nextFeature.geometry.coordinates;\n    // Magic below from https://github.com/mapbox/mapbox-gl-js/issues/3250#issuecomment-294887678\n    // This make sure the lines can cross the 180th meridian\n    nextLng += nextLng - lng > 180 ? -360 : lng - nextLng > 180 ? 360 : 0;\n    lines.push([\n      [lng, lat],\n      [nextLng, nextLat],\n    ]);\n  }\n\n  return isUnique;\n});\n\nconst placesCount = Object.keys(_places).length;\n\nconst countries = Object.keys(_countries).map((country) => {\n  const c = _countries[country];\n  return {\n    name: country,\n    cc: c.cc,\n    bounds: c.bounds,\n    places_count: c.places_count,\n    checkins_count: c.checkins_count,\n  };\n});\n\nconst countriesCount = countries.length;\n\ncountries.sort((a, b) => b.places_count - a.places_count);\n\nmap.once('styledata', () => {\n  map.once('load', () => {\n    countries.forEach((country, i) => {\n      const { cc, name, bounds, checkins_count, places_count } = country;\n      const $button = document.createElement('button');\n      $button.type = 'button';\n      $button.addEventListener(\n        'click',\n        (e) => {\n          map.fitBounds(bounds, { padding: 150 });\n        },\n        false,\n      );\n      $button.innerHTML = `\n        <img src=\"data/countries/${cc}.svg\" intrinsicsize=\"50x50\" width=\"50\" height=\"50\" alt=\"\">\n        <br>\n        <b>${name}</b>\n        <br>\n        ${numberWithCommas(checkins_count)} check-in${\n        checkins_count > 1 ? 's' : ''\n      }\n        <br>\n        ${numberWithCommas(places_count)} place${places_count > 1 ? 's' : ''}\n      `;\n      $countries.appendChild($button);\n    });\n  });\n\n  const layers = map.getStyle().layers.reverse();\n  const labelLayerIdx = layers.findIndex(function (layer) {\n    return layer.type !== 'symbol';\n  });\n  const labelLayerId =\n    labelLayerIdx !== -1 ? layers[labelLayerIdx].id : undefined;\n  console.log(layers);\n\n  map.setLayerZoomRange('transit-label', 14, 16);\n\n  map.addSource('checkins', {\n    type: 'geojson',\n    data: data,\n    cluster: true,\n    clusterMaxZoom: 10,\n    clusterRadius: 10,\n    tolerance: 10,\n    buffer: 0,\n  });\n\n  map.addLayer({\n    id: 'cluster',\n    type: 'circle',\n    source: 'checkins',\n    filter: ['has', 'point_count'],\n    paint: {\n      'circle-radius': [\n        'interpolate',\n        ['linear'],\n        ['get', 'point_count'],\n        3,\n        7,\n        10,\n        10,\n        100,\n        13,\n        200,\n        16,\n      ],\n      'circle-color': color,\n      'circle-opacity': 0.9,\n      'circle-stroke-width': [\n        'interpolate',\n        ['linear'],\n        ['get', 'point_count'],\n        3,\n        3,\n        50,\n        6,\n      ],\n      'circle-stroke-color': color,\n      'circle-stroke-opacity': 0.3,\n    },\n  });\n\n  map.addLayer({\n    id: 'checkins-count',\n    type: 'symbol',\n    source: 'checkins',\n    filter: ['has', 'point_count'],\n    maxzoom: 11,\n    layout: {\n      'text-field': '{point_count_abbreviated}',\n      'text-size': 10,\n    },\n  });\n\n  map.addLayer(\n    {\n      id: 'checkins',\n      type: 'circle',\n      source: 'checkins',\n      minzoom: 8,\n      filter: ['!has', 'point_count'],\n      paint: {\n        'circle-radius': 3,\n        'circle-color': color,\n        'circle-opacity': 0.9,\n        'circle-stroke-width': 3,\n        'circle-stroke-color': color,\n        'circle-stroke-opacity': 0.1,\n      },\n    },\n    labelLayerId,\n  );\n\n  map.once('load', () => {\n    requestAnimationFrame(() => {\n      renderNumber($infoCheckins, checkinsCount);\n      renderNumber($infoPlaces, placesCount);\n      renderNumber($infoCountries, countriesCount);\n      bodyClass.add('render');\n    });\n  });\n\n  map.on('mouseenter', 'cluster', () => {\n    map.getCanvas().style.cursor = 'pointer';\n  });\n\n  map.on('click', 'cluster', (e) => {\n    e.originalEvent.stopPropagation();\n    map.flyTo({\n      center: e.lngLat,\n      zoom: map.getZoom() + 2,\n    });\n  });\n\n  map.on('mouseleave', 'cluster', () => {\n    map.getCanvas().style.cursor = '';\n  });\n\n  map.addLayer(\n    {\n      id: 'lines',\n      type: 'line',\n      source: {\n        type: 'geojson',\n        data: {\n          type: 'Feature',\n          geometry: {\n            type: 'MultiLineString',\n            coordinates: lines,\n          },\n        },\n      },\n      layout: {\n        visibility: 'none',\n      },\n      paint: {\n        'line-color': '#fff',\n        'line-opacity': 0.3,\n      },\n    },\n    labelLayerId,\n  );\n\n  // TODO: filter by date\n  // const filterByDate = (startDate, endDate) => {\n  //   map.setFilter('checkins', [\n  //     'all',\n  //     ['>=', 'date', startDate],\n  //     ['<=', 'date', endDate],\n  //     map.getFilter('checkins'),\n  //   ]);\n  // };\n  // filterByDate(20160101, 20161212);\n\n  const err = (e) => {\n    const reload = confirm(\n      'Oops, the map is acting weird now. Reload this page? 😅',\n    );\n    if (reload) location.reload();\n    console.error(e);\n  };\n  map.on('error', err);\n  window.onerror = err;\n});\n"]}